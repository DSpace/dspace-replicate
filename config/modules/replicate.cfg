#---------------------------------------------------------------#
#--------------REPLICATION CONFIGURATIONS-----------------------#
#---------------------------------------------------------------#
# Configuration properties used solely by the replication tasks #
# In order for these configurations to be used, one or more     #
# content replication tasks should be configured/enabled in the #
# 'curate.cfg' configuration file.                              #
#---------------------------------------------------------------#

# Base directory for content replication operations
base.dir = ${dspace.dir}/replicate

# Replica store implementation class
plugin.single.org.dspace.ctask.replicate.ObjectStore = \
    org.dspace.ctask.replicate.impl.DuraCloudObjectStore
#DuraCloudObjectStore - Replicate content to DuraCloud (requires 'duracloud.cfg' file to be setup)
#LocalObjectStore - Replicate content to another location (folder) on local file system
#MountableObjectStore - Replicate content to a mountable external file system

# Location of local (e.g. local, mountable, sync) object store
# ignored for non-local stores (e.g. DuraCloud)
store.dir = ${dspace.dir}/repstore

### AIP packaging ###

# Package type. Permitted values: 'mets', 'bagit'
packer.pkgtype = bagit

# Format of package compression. Permitted values: 'zip' or 'tgz'
# for 'mets' packages, only zip is supported
packer.archfmt = zip

# Package content filter - i.e. bundles to exclude
packer.cfilter = TEXT,THUMBNAIL

###  ReplicateConsumer settings ###
# ReplicateConsumer must be properly declared/configured in dspace.cfg
# All tasks defined will be queued, unless the '+p' suffix is appended, when
# they will be immediately performed. Exercise considerable caution when using
# +p, as lengthy tasks can adversely affect UI or other responsiveness. 

# Replicate event consumer tasks upon install/add events.
# A comma separated list of valid task plugin names (with optional '+p' suffix)
consumer.tasks.add = transmitaip

# Replicate event consumer tasks upon modification events.
# A comma separated list of valid task plugin names (with optional '+p' suffix)
consumer.tasks.mod = transmitaip

# Replicate event consumer tasks upon a delete/remove events.
# A comma separated list of valid task plugin names (with optional '+p' suffix)
consumer.tasks.del = catalog+p

# Replicate event consumer queue name - where all queued tasks are placed
consumer.queue = replication

# Template for checkm manifest
checkm.template = id|md5|csm|length

